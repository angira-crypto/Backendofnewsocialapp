// server.js
import express from "express";
import bodyParser from "body-parser";
import cors from "cors";
import pkg from "pg";

const { Pool } = pkg;

// ✅ Database connection (Render Postgres URL use karna)
const pool = new Pool({
  connectionString: process.env.DATABASE_URL, // Render ke env variable me set karna
  ssl: { rejectUnauthorized: false },
});

const app = express();
app.use(cors());
app.use(bodyParser.json());

// ---------------------------
// User Routes
// ---------------------------
app.post("/api/register", async (req, res) => {
  const { name, email, password } = req.body;
  try {
    const result = await pool.query(
      "INSERT INTO users (name, email, password_hash, balance) VALUES ($1,$2,$3,$4) RETURNING id, name, email, balance",
      [name, email, password, 0] // ⚠️ password ko hash karna zaroori hai (bcrypt)
    );
    res.json(result.rows[0]);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Registration failed" });
  }
});

app.post("/api/login", async (req, res) => {
  const { email, password } = req.body;
  try {
    const result = await pool.query("SELECT * FROM users WHERE email=$1", [
      email,
    ]);
    const user = result.rows[0];
    if (!user) return res.status(400).json({ error: "User not found" });
    // ⚠️ Compare hashed password here
    if (user.password_hash !== password) {
      return res.status(401).json({ error: "Wrong password" });
    }
    res.json({ id: user.id, name: user.name, balance: user.balance });
  } catch (err) {
    res.status(500).json({ error: "Login failed" });
  }
});

// ---------------------------
// Posts Routes
// ---------------------------
app.get("/api/posts", async (req, res) => {
  try {
    const result = await pool.query(
      "SELECT posts.id, posts.content, posts.category, users.name AS author FROM posts JOIN users ON posts.user_id=users.id ORDER BY posts.created_at DESC"
    );
    res.json(result.rows);
  } catch (err) {
    res.status(500).json({ error: "Failed to fetch posts" });
  }
});

app.post("/api/posts", async (req, res) => {
  const { user_id, content, category } = req.body;
  try {
    const result = await pool.query(
      "INSERT INTO posts (user_id, content, category) VALUES ($1,$2,$3) RETURNING *",
      [user_id, content, category]
    );
    res.json(result.rows[0]);
  } catch (err) {
    res.status(500).json({ error: "Failed to create post" });
  }
});

// ---------------------------
// Wallet Routes
// ---------------------------
app.get("/api/wallet/:user_id", async (req, res) => {
  const { user_id } = req.params;
  try {
    const result = await pool.query(
      "SELECT balance FROM users WHERE id=$1",
      [user_id]
    );
    res.json(result.rows[0]);
  } catch (err) {
    res.status(500).json({ error: "Failed to fetch balance" });
  }
});

app.post("/api/wallet/add", async (req, res) => {
  const { user_id, amount } = req.body;
  try {
    await pool.query("UPDATE users SET balance = balance + $1 WHERE id=$2", [
      amount,
      user_id,
    ]);
    res.json({ success: true });
  } catch (err) {
    res.status(500).json({ error: "Failed to update balance" });
  }
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`✅ Server running on port ${PORT}`));
